@model AssetUserManagement.Tbl_AssestMaster

@{
    ViewBag.Title = "Create";
}

<h3>Create</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Asset No: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Asset Type: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssetType, (SelectList)ViewBag.AssetType, "-----   Select   -----", new { @class = "form-control" })

                @*@Html.EditorFor(model => model.AssetType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.AssetType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Assigned Date: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssignedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Warranty End Date: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WarrantyEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WarrantyEndDate, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Status: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Status, (SelectList)ViewBag.StatusType, "-----   Select   -----", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Asset Tagged User: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.AssetTaggedUser, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("AssetTaggedUser", (IEnumerable<SelectListItem>)ViewBag.UserList, "-----   Select   -----",new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.AssetTaggedUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vendor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Vendor, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Vendor, (SelectList)ViewBag.VendorType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Vendor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @*<input class="btn btn-info" type="button" name="cancel" id="btncancel" value="Clear All" />*@
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/jquery-ui.css")
    <script type="text/javascript">

        $(document).ready(function () {
            //$("#AssignedDate").datepicker({
            $('input[type=datetime]').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });


        $(document).ready(function () {
            $("#btncancel").click(function () {
                //alert('sdfsdf')
                $('input:number').val('');
                $('input:datetime').val('');
                return false;
            });
        });
    </script>
}
